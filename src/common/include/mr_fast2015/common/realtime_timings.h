#ifndef REALTIME_TIMINGS_H
#define REALTIME_TIMINGS_H

struct RealtimeTimings {
  static constexpr int CONTROLLER_INTERFACE_OFFSET = 0;
  static constexpr int CONTROLLER_INTERFACE_MEASUREMENT_CYCLE_TIME = 5600;
  static constexpr int CONTROLLER_INTERFACE_COMMAND_CYCLE_TIME = 1500;

  static constexpr int STATE_ESTIMATION_OFFSET =
      CONTROLLER_INTERFACE_OFFSET + CONTROLLER_INTERFACE_MEASUREMENT_CYCLE_TIME;
  static constexpr int STATE_ESTIMATION_CYCLE_TIME = 100;

  static constexpr int LOWLEVEL_CONTROLLER_CYCLE_TIME = 100;
  static constexpr int LOWLEVEL_CONTROLLER_WAIT_TIME = 0;
  static constexpr int LOWLEVEL_CONTROLLER_OFFSET =
      STATE_ESTIMATION_OFFSET + STATE_ESTIMATION_CYCLE_TIME + LOWLEVEL_CONTROLLER_WAIT_TIME;

  static constexpr int CONTROLLER_INTERFACE_COMMAND_WAIT_TIME =
      STATE_ESTIMATION_CYCLE_TIME + LOWLEVEL_CONTROLLER_CYCLE_TIME + LOWLEVEL_CONTROLLER_WAIT_TIME;

  static constexpr int COMPLETE_CYCLE_TIME =
      CONTROLLER_INTERFACE_OFFSET + CONTROLLER_INTERFACE_MEASUREMENT_CYCLE_TIME +
      CONTROLLER_INTERFACE_COMMAND_WAIT_TIME + CONTROLLER_INTERFACE_COMMAND_CYCLE_TIME;

  static constexpr int LOOP_RATE = 120.0;

  static_assert((1000000.0 / LOOP_RATE) > COMPLETE_CYCLE_TIME, "");
};

#endif  // REALTIME_TIMINGS_H
